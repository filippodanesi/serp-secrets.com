---
import type { HTMLAttributes } from 'astro/types';

type AnchorProps = HTMLAttributes<'a'> & { type?: never; variant?: 'primary' | 'secondary' };
type ButtonProps = HTMLAttributes<'button'> & { href?: never; variant?: 'primary' | 'secondary' };
type Props = ButtonProps | AnchorProps;

const { 
  href, 
  class: className,
  variant = 'primary',
  'data-url': dataUrl,
  'data-tooltip-default': tooltipDefault,
  'data-tooltip-success': tooltipSuccess,
  ...rest 
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center px-5 py-2.5 font-medium text-sm leading-tight rounded-lg transition-colors duration-200 font-sans tracking-tight';

const variantClasses = {
  primary: 'bg-accent text-white hover:bg-accent/90',
  secondary: 'bg-main/5 text-main border border-main/20 hover:bg-main/10 hover:border-main/30'
};

const buttonClasses = `${baseClasses} ${variantClasses[variant]}`;
---

{
  href ? (
    <a 
      href={href} 
      class:list={[buttonClasses, className]} 
      {...rest}
    >
      <slot />
    </a>
  ) : (
    <button 
      class:list={[buttonClasses, className]}
      data-url={dataUrl}
      data-tooltip-default={tooltipDefault}
      data-tooltip-success={tooltipSuccess}
      type="button"
      {...rest}
    >
      <slot />
    </button>
  )
}