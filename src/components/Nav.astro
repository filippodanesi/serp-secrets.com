---
import type { Link } from '../data/site-config';
import NavLink from './NavLink.astro';
import ThemeToggle from './ThemeToggle.astro';
import SearchIcon from '../icons/Search.astro';
import siteConfig from '@/data/site-config';

const navLinks = (siteConfig.headerNavLinks ?? []).filter((link: Link) => link.href !== '/search');
---

<nav class="min-h-10 pt-4 pb-12 relative sm:min-h-14 sm:pb-24 md:pt-8">
    <!-- Mobile Navigation -->
    <div class="md:hidden w-full max-w-3xl mx-auto relative">
        <div class="flex justify-between items-center">
            <a href="/" class="flex items-center hover:opacity-80 transition-opacity" aria-label="Go to homepage">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 192 192" class="w-7 h-7">
                    <path d="M99.6 23.1h-7v144.3h7V23.1zM168.8 91.8H23.4v7h145.4v-7zM47.2 41.7l-5 5L145 148.8l5-5zM145 41.7L42.2 143.8l5 4.9L150 46.7zM30.1 64.8l-2.6 6.5l134.6 54.5l2.7-6.5zM120.3 27.1L65.4 160.8l6.5 2.6l54.9-133.7zM162.3 65l-134.9 54l2.6 6.5l134.9-54zM72.2 27l-6.5 2.6l54.2 134l6.5-2.6z"></path>
                    <style>
                        path { fill: rgb(var(--color-text-main)); }
                    </style>
                </svg>
            </a>

            <div class="flex items-center gap-4">
                <a href="/search/" class="flex items-center hover:opacity-80 transition-opacity" aria-label="Search">
                    <SearchIcon class="w-5 h-5" />
                </a>
                <ThemeToggle />
                {
                    navLinks.length > 0 && (
                        <button
                            class="menu-toggle w-8 h-8 flex items-center justify-center relative z-30"
                            aria-label="Open Menu"
                            aria-expanded="false"
                            aria-controls="menu-items"
                        >
                            <span class="menu-toggle-icon w-6 h-px relative bg-current" />
                        </button>
                    )
                }
            </div>
        </div>

        {
            navLinks.length > 0 && (
                <ul id="menu-items" class="menu flex gap-6">
                    {navLinks.map((link, index) => (
                        <li class="menu-item py-1 opacity-0">
                            <NavLink
                                class="text-xl font-serif text-main hover:underline hover:underline-offset-2 hover:decoration-1 md:text-base"
                                href={link.href}
                            >
                                {link.text}
                            </NavLink>
                        </li>
                    ))}
                </ul>
            )
        }
    </div>

    <!-- Desktop Navigation -->
    <div class="hidden md:block">
        <!-- Logo -->
        <a href="/" class="absolute left-0 top-8 hover:opacity-80 transition-opacity" aria-label="Go to homepage">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 192 192" class="w-7 h-7">
                <path d="M99.6 23.1h-7v144.3h7V23.1zM168.8 91.8H23.4v7h145.4v-7zM47.2 41.7l-5 5L145 148.8l5-5zM145 41.7L42.2 143.8l5 4.9L150 46.7zM30.1 64.8l-2.6 6.5l134.6 54.5l2.7-6.5zM120.3 27.1L65.4 160.8l6.5 2.6l54.9-133.7zM162.3 65l-134.9 54l2.6 6.5l134.9-54zM72.2 27l-6.5 2.6l54.2 134l6.5-2.6z"></path>
                <style>
                    path { fill: rgb(var(--color-text-main)); }
                </style>
            </svg>
        </a>

        <!-- Search and Theme Toggle -->
        <div class="absolute right-0 top-8 z-10 flex items-center gap-4">
            <a href="/search/" class="flex items-center hover:opacity-80 transition-opacity" aria-label="Search">
                <SearchIcon class="w-5 h-5" />
            </a>
            <ThemeToggle />
        </div>

        <!-- Menu -->
        {navLinks.length > 0 && (
            <div class="max-w-3xl mx-auto">
                <ul class="flex gap-6 items-center justify-center">
                    {navLinks.map((link) => (
                        <li class="py-1">
                            <NavLink
                                class="text-xl font-serif text-main hover:underline hover:underline-offset-2 hover:decoration-1 md:text-base"
                                href={link.href}
                            >
                                {link.text}
                            </NavLink>
                        </li>
                    ))}
                </ul>
            </div>
        )}
    </div>
</nav>

<style>
    @media (max-width: 767px) {
        .menu {
            @apply fixed top-0 left-0 right-0 h-screen flex-col gap-6 px-6 pt-24 pb-10 z-20;
            background: rgb(var(--color-bg-main) / 0.85);
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
            transform: translateY(-100%);
            transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
        }

        .menu.is-visible {
            transform: translateY(0);
        }

        .menu.is-visible .menu-item {
            opacity: 1;
            transform: translateY(0);
            transition: opacity 0.4s ease, transform 0.4s cubic-bezier(0.16, 1, 0.3, 1);
        }

        .menu-item {
            transform: translateY(20px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

        .menu-item:nth-child(1) { transition-delay: 0.1s; }
        .menu-item:nth-child(2) { transition-delay: 0.15s; }
        .menu-item:nth-child(3) { transition-delay: 0.2s; }
        .menu-item:nth-child(4) { transition-delay: 0.25s; }

        .menu-toggle-icon {
            transition: background-color 0.2s;
        }

        .menu-toggle-icon:before,
        .menu-toggle-icon:after {
            @apply w-6 h-px absolute left-1/2 top-0 origin-center -translate-x-1/2 bg-current;
            content: '';
            transition: transform 0.2s ease-out;
        }

        .menu-toggle-icon:before { @apply -translate-y-1.5; }
        .menu-toggle-icon:after { @apply translate-y-1.5; }

        .menu-toggle.is-active .menu-toggle-icon {
            background-color: transparent;
        }

        .menu-toggle.is-active .menu-toggle-icon:before {
            @apply translate-y-0 rotate-45;
        }

        .menu-toggle.is-active .menu-toggle-icon:after {
            @apply translate-y-0 -rotate-45;
        }
    }
</style>

<script>
    const menuToggle = () => {
        const menu = document.querySelector('.menu');
        const menuToggleBtn = document.querySelector('.menu-toggle');
        
        if (!menu || !menuToggleBtn) return;
        
        const handleClick = () => {
            const isMenuExpanded = menuToggleBtn.getAttribute('aria-expanded') === 'true';
            menuToggleBtn.classList.toggle('is-active');
            menuToggleBtn.setAttribute('aria-expanded', isMenuExpanded ? 'false' : 'true');
            menuToggleBtn.setAttribute('aria-label', isMenuExpanded ? 'Open Menu' : 'Close Menu');
            menu.classList.toggle('is-visible');
        };

        menuToggleBtn.removeEventListener('click', handleClick);
        menuToggleBtn.addEventListener('click', handleClick);
    };

    // Initialize on load
    menuToggle();
    // Reinitialize after navigation
    document.addEventListener('astro:after-swap', menuToggle);
</script>