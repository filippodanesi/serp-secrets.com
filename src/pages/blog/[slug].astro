---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import PostPreview from '../../components/PostPreview.astro';
import ShareIcons from '../../components/ShareIcons.astro';
import { sortItemsByDateDesc } from '../../utils/data-utils';
import { slugify } from '../../utils/common-utils';
import BlogPostingStructuredData from '../../components/structured-data/BlogPostingStructuredData.astro';

export const prerender = true;

export async function getStaticPaths() {
    const posts = (await getCollection('blog')).sort(sortItemsByDateDesc);
    const postCount = posts.length;
    return posts.map((post, index) => ({
        params: { slug: post.slug },
        props: {
            post,
            prevPost: index + 1 !== postCount ? posts[index + 1] : null,
            nextPost: index !== 0 ? posts[index - 1] : null
        }
    }));
}

type Props = { post: CollectionEntry<'blog'>; prevPost: CollectionEntry<'blog'>; nextPost: CollectionEntry<'blog'> };

const { href } = Astro.url;
const { post, prevPost, nextPost } = Astro.props;
const { title, publishDate, updatedDate, excerpt, tags = [], seo, image } = post.data;
const { Content, remarkPluginFrontmatter } = await post.render();

// Preparazione breadcrumb
const breadcrumbItems = [
    {
        name: 'Archive',
        item: `${Astro.site}blog/`
    }
];

// Aggiungi categoria se presente
if (tags.length > 0) {
    const categorySlug = slugify(tags[0]);
    breadcrumbItems.push({
        name: tags[0],
        item: `${Astro.site}categories/${categorySlug}/`
    });
}
---

<BaseLayout 
    title={seo?.title ?? title} 
    description={seo?.description ?? excerpt} 
    image={seo?.image ?? image} 
    pageType="article" 
    showHeader={false}
    breadcrumb={{
        items: breadcrumbItems,
        currentPageName: title
    }}
>
    <BlogPostingStructuredData slot="structured-data" {...post.data} body={post.body} />
    <article class="mb-16 sm:mb-24">
        {/* Featured Image */}
        {
            image && (
                <div class="relative mb-8 -mx-4 sm:mx-0 sm:rounded-xl overflow-hidden aspect-[16/9]">
                    <img
                        src={image.src}
                        alt={image.alt}
                        class="absolute inset-0 w-full h-full object-cover"
                        loading="eager"
                        width="1200"
                        height="675"
                        transition:name={`post-image-${post.slug}`}
                    />
                </div>
            )
        }

        {/* Article Header */}
        <header class="mb-8 mt-6">
            {/* Category tag - For both mobile and desktop */}
            {tags.length > 0 && (
                <div class="mb-5">
                    <a 
                        href={`/categories/${slugify(tags[0])}/`}
                        class="text-xs mb-2 text-[rgb(var(--color-text-muted)_/_0.6)] hover:underline border border-[rgb(var(--color-text-main)_/_0.08)] rounded-full px-3 py-1"
                    >
                        {tags[0]}
                    </a>
                </div>
            )}

            {/* Article Title */}
            <h1 class="text-3xl leading-tight font-serif font-medium sm:text-5xl sm:leading-tight mb-6 text-[rgb(var(--color-text-main))]" transition:name={`post-title-${post.slug}`}>
                {title}
            </h1>

            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
                {/* Meta information */}
                <div class="text-sm text-[rgb(var(--color-text-muted)_/_0.8)]" transition:name={`post-meta-${post.slug}`}>
                    <span>Published by</span>
                    <a href="https://www.filippodanesi.it" class="font-medium hover:underline">Filippo Danesi</a>
                    <span>on <FormattedDate date={publishDate} /></span>
                
                    {updatedDate && (
                        <>
                            <span>/</span>
                            <span>
                                Updated by <a href="https://www.filippodanesi.it" class="font-medium hover:underline">Filippo Danesi</a> on <FormattedDate date={updatedDate} />
                            </span>
                        </>
                    )}
                </div>

                {/* Share Icons */}
                <div class="mt-4 sm:mt-0">
                    <ShareIcons url={href} title={title} />
                </div>
            </div>
        </header>

        {/* Article Content */}
        <div class="max-w-none prose prose-dante dark:prose-invert sm:prose-lg" transition:animate="slide">
            <Content />
        </div>
    </article>

    {/* Related Posts Section */}
    {
        (prevPost || nextPost) && (
            <div class="my-16 sm:my-24">
                <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Read Next</h2>
                {nextPost && <PostPreview post={nextPost} class="mb-10 sm:mb-12" headingLevel="h3" />}
                {prevPost && <PostPreview post={prevPost} class="mb-10 sm:mb-12" headingLevel="h3" />}
            </div>
        )
    }
</BaseLayout>